version: '3.8'

services:
  game:
    container_name: game
    build:
      context: "./backend/Game"
      dockerfile: Dockerfile
    expose:
      - 8000
    depends_on:
      - redis
      - game_db
    env_file:
      - .env
    networks:
      - game-network
      - microservices-network

  redis:
    image: "redis:alpine"
    container_name: redis
    networks:
      - game-network
      - chat-network
      - notif-network
    expose:
      - 6379

  usermanagement:
    container_name: usermanagement
    build:
      context: "./backend/usermanagement"
      dockerfile: Dockerfile
    expose:
      - 8000
    depends_on:
      - usermanagement_db
    env_file:
      - .env
    networks:
      - usermanagement-network
      - microservices-network
    volumes:
      - usermanagement_media_data:/app/media

  frontend:
    container_name: frontend
    build: 
      context: "./frontend"
      dockerfile: Dockerfile
    expose:
      - 5173
    env_file:
      - .env
    volumes:
      - front_vm:/app
      - /app/node_modules
    networks:
      - microservices-network
    
  notifications:
    container_name: notifications
    build:
      context: "./backend/notifications"
      dockerfile: Dockerfile
    expose:
      - 8000
    depends_on:
      - notif_db
      - redis
    env_file:
      - .env
    networks:
      - notif-network
      - microservices-network

  chat:
    container_name: chat
    build:
      context: "./backend/ChatService"
      dockerfile: Dockerfile
    expose:
      - 8000
    depends_on:
      - chat_db
      - redis
    env_file:
      - .env
    networks:
      - chat-network
      - microservices-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: mynginx
    volumes:
      - usermanagement_media_data:/usr/share/nginx/media
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - game
      - usermanagement
      - notifications
      - chat
    networks:
      - chat-network
      - game-network
      - notif-network
      - usermanagement-network
      - microservices-network

  usermanagement_db:
    image: postgres:15-alpine
    container_name: usermanagement_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    volumes:
      - usermanagement_db_data:/var/lib/postgresql/data
    networks:
      - usermanagement-network
      - microservices-network

  game_db:
    image: postgres:15-alpine
    container_name: game_db
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    volumes:
      - game_db_data:/var/lib/postgresql/data
    networks:
      - game-network
      - microservices-network

  notif_db:
    image: postgres:15-alpine
    container_name: notif_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    volumes:
      - notif_db_data:/var/lib/postgresql/data
    networks:
      - notif-network
      - microservices-network
  
  chat_db:
    image: postgres:15-alpine
    container_name: chat_db
    expose:
      - 5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    volumes:
      - chat_db_data:/var/lib/postgresql/data
    networks:
      - chat-network
      - microservices-network

volumes:
  game_db_data:
  notif_db_data:
  usermanagement_db_data:
  chat_db_data:
  usermanagement_media_data:
  front_vm:
    driver: local
    driver_opts:
      device: ${PWD}/frontend
      type: none
      o: bind
  # nginx_vm:
  #   driver: local
  #   driver_opts:
  #     device: ${PWD}/frontend/dist
  #     type: none
  #     o: bind

networks:
  microservices-network:
    driver: bridge
  usermanagement-network:
    driver: bridge
  game-network:
    driver: bridge
  notif-network:
    driver: bridge
  chat-network:
    driver: bridge
